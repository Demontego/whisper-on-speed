[project]
name = "whisper"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "accelerate>=1.7.0",
    "torch>=2.7.1",
    "transformers>=4.52.4",
    "librosa==0.11",
    "numpy==2.2",
    "pydantic>=2.11.7",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
no-build-isolation-package = ["flash-attn"]
dev-dependencies = [
    "pytest>=8.4.0",
    "ruff>=0.11.13",
    "ipykernel>=6.29.5",
    "pyright>=1.1.390",
    "debugpy>=1.8.0",
    "datasets>=3.6.0",
    "soundfile>=0.13.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "*_test.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --color=yes -m 'not integration'"
markers = [
    "integration: mark test as requiring external services like Vertex AI",
    "benchmark: mark test as performance benchmark"
]
filterwarnings = [
    "ignore::DeprecationWarning:audioread.*",
    "ignore::FutureWarning:transformers.*",
    "ignore::DeprecationWarning:.*aifc.*",
    "ignore::DeprecationWarning:.*sunau.*"
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "*.ipynb",
    "docs/*",
    "drafts/*",
    "archives/*",
    "tests/*",
    "notebooks/*"
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = ["E", "F", "ANN", "W", "N", "I001"]
ignore = ["W2", "ANN101"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.13"
typeCheckingMode = "basic"
reportMissingImports = true
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/.venv",
    "**/venv",
    "build",
    "dist",
    "notebooks/*"
]
